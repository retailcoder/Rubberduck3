<UserControl x:Class="Rubberduck.UI.Shell.StatusBar.StatusBarControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rubberduck.UI.Shell.StatusBar"
             xmlns:shell="clr-namespace:Rubberduck.UI.Shell" 
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=shell:IShellWindowViewModel}"
             d:DesignWidth="800" d:DesignHeight="18"  VerticalContentAlignment="Center">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/Templates.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </UserControl.Resources>
    
    <StatusBar Background="{DynamicResource ThemeBackgroundDarkColorBrush}" 
               Foreground="{DynamicResource ThemeTextBackgroundDarkColorBrush}"
               MinHeight="18" FontSize="11" Margin="5,0"
               BorderThickness="0,1,0,0" BorderBrush="{DynamicResource ThemeTextInactiveColorBrush}">
        
         <!--LanguageServer status--> 
        
        <StatusBarItem Padding="0">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <shell:FlatButton ToolTip="Show language server trace toolwindow" VerticalAlignment="Center"
                                  Icon="{Binding StatusBar.ServerConnectionState, Converter={StaticResource ServerConnectionStateToIconConverter}}"
                                  Height="14" Width="14"
                                  Command="{Binding StatusBar.ShowLanguageServerTraceCommand}"/>

                <Label Content="{Binding StatusBar.StatusText}" Foreground="{DynamicResource ThemeTextColorBrush}" />
            </StackPanel>
        </StatusBarItem>

        <Separator Margin="8" Foreground="{DynamicResource ThemeTextInactiveColorBrush}" 
                   Visibility="{Binding StatusBar.ProgressMaxValue, Converter={StaticResource HasItemsVisibilityConverter}}"/>

         <!--WorkDoneProgress reporting--> 
        
        <StatusBarItem Padding="0" Visibility="{Binding StatusBar.ProgressMaxValue, Converter={StaticResource HasItemsVisibilityConverter}}" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Vertical">
                    <Label Content="{Binding StatusBar.ProgressMessage}"
                           Margin="5,0" Padding="0" FontSize="8" Height="12"
                           Foreground="{DynamicResource ThemeTextInactiveColorBrush}" />
                    <ProgressBar x:Name="WorkDoneProgressIndicator"
                                 Foreground="{DynamicResource ThemeAccent2DarkColorBrush}"
                                 HorizontalAlignment="Left"
                                 Orientation="Horizontal"
                                 Margin="5,0,0,0"
                                 Minimum="0" Maximum="{Binding StatusBar.ProgressMaxValue}"
                                 Value="{Binding StatusBar.ProgressValue}"
                                 Height="2" Width="100" />
                </StackPanel>
                <shell:FlatButton Grid.Column="1" Command="{Binding StatusBar.CancelWorkDoneProgressCommand}"
                                  Visibility="{Binding StatusBar.CanCancelWorkDoneProgress, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  ToolTip="Cancel this operation"
                                  Icon="{DynamicResource CancelIcon}" Margin="6,2" Height="10" Width="10" />

            </Grid>
        </StatusBarItem>


        <Separator Margin="8" Foreground="{DynamicResource ThemeTextInactiveColorBrush}" />

         <!--active document icon/name--> 
        <StatusBarItem Margin="5,0" Padding="0">
            <StackPanel Orientation="Horizontal">
                <Image Height="14" Margin="4,2">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.IsReadOnly, Mode=OneWay}" Value="False"/>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.DocumentType, Mode=OneWay}" Value="TextDocument"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="{DynamicResource ClearTextFileIcon}" />
                                        <Setter Property="ToolTip" Value="Text document" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.IsReadOnly, Mode=OneWay}" Value="False"/>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.DocumentType, Mode=OneWay}" Value="MarkdownFile"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="{DynamicResource ClearTextFileIcon}" />
                                        <Setter Property="ToolTip" Value="Markdown document" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.IsReadOnly, Mode=OneWay}" Value="False"/>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.DocumentType, Mode=OneWay}" Value="SourceFile"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="{DynamicResource ClearCodeFileIcon}" />
                                        <Setter Property="ToolTip" Value="Source file" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.IsReadOnly, Mode=OneWay}" Value="False"/>
                                        <Condition Binding="{Binding StatusBar.ActiveDocumentStatus.DocumentType, Mode=OneWay}" Value="ProjectFile"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="{DynamicResource ClearCodeFileIcon}" />
                                        <Setter Property="ToolTip" Value="Project file (.rdproj)" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding StatusBar.ActiveDocumentStatus.IsReadOnly, Mode=OneWay}" Value="True">
                                    <Setter Property="Source" Value="{DynamicResource ShieldFileIcon}" />
                                    <Setter Property="ToolTip" Value="Document is read-only" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label Foreground="{DynamicResource ThemeTextColorBrush}" 
                       Content="{Binding StatusBar.ActiveDocumentStatus.DocumentName}" 
                       Padding="0" VerticalContentAlignment="Center" />
            </StackPanel>
        </StatusBarItem>

         <!--selection info--> 
        <StatusBarItem Margin="5,0" Padding="0" Visibility="{Binding StatusBar.ActiveDocumentStatus.IsReadOnly, Converter={StaticResource BoolToHiddenVisibility}}">
            <StackPanel Orientation="Horizontal">
                <Label Foreground="{DynamicResource ThemeTextColorBrush}">
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}L{0}C{1}">
                                <Binding Path="StatusBar.ActiveDocumentStatus.CaretLine" />
                                <Binding Path="StatusBar.ActiveDocumentStatus.CaretColumn" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Label>
            </StackPanel>
        </StatusBarItem>

         <!--IsWriting indicator--> 
        <StatusBarItem Padding="0" Margin="5,0" Visibility="{Binding StatusBar.IsWriting, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Image Source="{DynamicResource DuckyIcon}" Height="16" />
            </StackPanel>
        </StatusBarItem>

    </StatusBar>
</UserControl>
